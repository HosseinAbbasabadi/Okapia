@model Okapia.Domain.Commands.Setting.SettingDto
@{
  ViewData["Title"] = "تماس با اُکاپیا";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-static">
  <div class="wrapper-2">
    <div class="container-fluid">
      <div class="row h-position">
        @await Component.InvokeAsync("FloatingCategories")

        <div class="col-lg-22 col-md-22 col-sm-24 col-xs-24 clearfix page-contactus">
          <div class="art-border">
            <div class="cu-top">
              <h1>ارتباط با ما</h1>
            </div>
            <article class="netbarg-map">
              <div id="dealLocation">
                <div id="onMap">
                  @Html.Raw(Model.Map)
                </div>
              </div>
            </article>
            <div class="row tw-col">
              <div data-wow-delay=".3s" data-wow-duration=".8s" class="col-sm-12 wow fadeIn">
                <article class="cu cu-call clearfix">
                  <header class="section-header margin-b20">
                    <h6 class="hx">
                      <span class="article-h3">فرم تماس</span>
                    </h6>
                  </header>
                </article>
                <form class="cu personal-pro ajaxform" method="post" asp-controller="Home" asp-action="Contactus">
                  <div class="nameandfname">
                    <div class="row">
                      <div class="col-xs-12 form-group req input-label-animate">
                        <div class="input text">
                          <label for="pe1">نام</label>
                          <input id="pe1" maxlength="50" name="Name" class="single-input required-input">
                        </div>
                        <span class="hint danger"></span>
                      </div>
                      <div class="col-xs-12 form-group req input-label-animate">
                        <div class="input text">
                          <label for="pe3">ایمیل</label>
                          <input id="pe3" maxlength="50" type="email" name="Email" class="single-input required-input emailcheck">
                        </div>
                        <span class="hint danger"></span>
                      </div>
                      <div class="col-xs-24 form-group req input-label-animate">
                        <label for="donate4">پیام شما</label>
                        <textarea id="donate4" name="Message" class="single-input required-input"></textarea>
                      </div>
                      @if (ViewData["message"] != null)
                      {
                        <div class="col-sm-23 alert alert-success" role="alert">
                          @ViewData["Message"]
                        </div>
                      }
                      <div class="col-xs-24">
                        <button type="submit" class="nb-btn nb-btn-success pull-left">ارسال</button>
                      </div>
                    </div>
                  </div>
                </form>
              </div>
              <div data-wow-delay=".9s" data-wow-duration=".8s" class="col-sm-12 wow fadeIn">
                <article class="cu cu-call clearfix">
                  <header class="section-header margin-b20">
                    <h6 class="hx">
                      <span class="article-h3">راه های ارتباطی دیگر</span>
                    </h6>
                  </header>
                  <ul class="clearfix">
                    <li>
                      <i class="icon icon-location74"></i><span> آدرس شرکت : @Model.Address</span>
                    </li>
                    <li>
                      <i class="icon icon-phone-call"></i><a href="tel:@Model.Tell1" class="tel"> تماس با پشتیبانی : @Model.Tell1</a>
                    </li>
                    <li>
                      <i class="icon icon-phone-call"></i><a href="tel:Model.Tell2" class="tel"> تماس با شرکت : @Model.Tell2</a>
                    </li>
                  </ul>
                </article>
              </div>
            </div>
          </div>
        </div>

        @await Component.InvokeAsync("CompanyNumbers")
        @*<script>
      function myNet() {
        var mapCanvas = document.getElementById("onMap");
        var myCenter = new google.maps.LatLng(35.7560031, 51.4095368);
        var mapOptions = { center: myCenter, zoom: 15, disableDefaultUI: false };
        var map = new google.maps.Map(mapCanvas, mapOptions);

        var marker = new google.maps.Marker({
          position: new google.maps.LatLng(35.7560031, 51.4095368),
          icon: '/assets/site/img/pin.png',
          animation: google.maps.Animation.DROP
        });

        marker.setMap(map);
      }

      $(document).ready(function () {
        myNet();
      })
    </script>*@

      </div>
    </div>
  </div>
</div>

@*<section class="custom-banner dark-overlay" style="background: url('/assets/images/counter.jpg') no-repeat fixed;"></section>

<div id="map">
  @Html.Raw(Model.Map)
</div>*@

@*<section class="contact-area section-padding-2">
  <div class="container">
    <div class="row ">
      <div class="col-xl-6 col-lg-6 col-md-6 col-sm-6 wow fadeInLeft" data-wow-delay="0.4s">
        <div class="contact-info rtl text-right">
          <h3>با ما در تماس باشید</h3>
          <p>راه های ارتباط</p>
          <div class="single-contact-info">
            <h4>آدرس دفتر</h4>
            <p>@Model.Address</p>
          </div>
          <div class="single-contact-info">
            <h4>تلفن</h4>
            <p>
              <a href="tel:">
                <i class="fa fa-phone"></i>@Model.Tell1
              </a> <br> <i class="fa fa-fax"></i>@Model.Tell2
            </p>
          </div>
          <div class="single-contact-info">
            <h4>پست الکترونیکی</h4>
            <p>
              <a href="mailto:">
                <i class="fa fa-envelope"></i>@Model.Email
              </a> <br>
            </p>
          </div>
        </div>
      </div>

      @await Component.InvokeAsync("ContactForm")

    </div>
  </div>
</section>*@

@*<script>
  function initMap() {
    var Place = { lat: 35.756905, lng: 51.414264 };
    // Styles a map in night mode.
    var map = new google.maps.Map(document.getElementById('map'),
      {
        center: Place,
        zoom: 17,
        disableDefaultUI: true,
        styles: [
          {
            featureType: "poi",
            elementType: "labels",
            stylers: [
              { visibility: "off" }
            ]
          },
          { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },
          { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },
          { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },
          {
            featureType: 'administrative.locality',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#d59563' }]
          },
          {
            featureType: 'poi',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#d59563' }]
          },
          {
            featureType: 'poi.park',
            elementType: 'geometry',
            stylers: [{ color: '#263c3f' }]
          },
          {
            featureType: 'poi.park',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#6b9a76' }]
          },
          {
            featureType: 'road',
            elementType: 'geometry',
            stylers: [{ color: '#38414e' }]
          },
          {
            featureType: 'road',
            elementType: 'geometry.stroke',
            stylers: [{ color: '#212a37' }]
          },
          {
            featureType: 'road',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#9ca5b3' }]
          },
          {
            featureType: 'road.highway',
            elementType: 'geometry',
            stylers: [{ color: '#746855' }]
          },
          {
            featureType: 'road.highway',
            elementType: 'geometry.stroke',
            stylers: [{ color: '#1f2835' }]
          },
          {
            featureType: 'road.highway',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#f3d19c' }]
          },
          {
            featureType: 'transit',
            elementType: 'geometry',
            stylers: [{ color: '#2f3948' }]
          },
          {
            featureType: 'transit.station',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#d59563' }]
          },
          {
            featureType: 'water',
            elementType: 'geometry',
            stylers: [{ color: '#17263c' }]
          },
          {
            featureType: 'water',
            elementType: 'labels.text.fill',
            stylers: [{ color: '#515c6d' }]
          },
          {
            featureType: 'water',
            elementType: 'labels.text.stroke',
            stylers: [{ color: '#17263c' }]
          }
        ]
      });

    var marker = new google.maps.Marker({
      position: Place,
      map: map,
    });


  }


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA7cKhDofbpXgQD99WZgnqgL-KoVImz75c&callback=initMap"
        async defer></script>*@