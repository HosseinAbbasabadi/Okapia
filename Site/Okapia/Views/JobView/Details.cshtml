@model Okapia.Domain.ViewModels.Job.JobViewDetailsViewModel
@{
  ViewData["Title"] = "جزپیات مرکز خدماتی";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="custom-banner dark-overlay" style="background: url(/assets/images/hero.jpg) no-repeat fixed;"></section>

<!--/Custom Banner-->
<!--Team Area-->
<section class="team-area section-padding-2">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-xl-8 centered wow fadeInUp" data-wow-delay="0.3s">

      </div>
    </div>


    <div class="row justify-content-center">
      <div class="col-12 mb-4 col-md-6 SwSlider wow fadeInRight" data-wow-delay="0.3s">

        <!-- Swiper -->
        <div class="swiper-container">
          <div class="swiper-wrapper">
            @foreach (var photo in Model.Photos)
            {
              if (!string.IsNullOrEmpty(photo.Name))
              {
                <div class="swiper-slide">
                  <img src="~/JobPhotos/@photo.Name" alt="@photo.Alt" title="@photo.Title"/>
                </div>
              }
            }
          </div>
          <div class="swiper-button-next"></div>
          <div class="swiper-button-prev"></div>

        </div>
      </div>
      <div class="col-12 col-md-6 okapia wow fadeInUp" data-wow-delay="0.5s">
        <div class="section-title text-right">
          <h2>@Model.JobName</h2>
          <span class="discount">تخفیف @Model.JobBenefitPercentForEndCustomer%</span>
        </div>

        <ul class="Features">
          @foreach (var feature in Model.JobFeatureList)
          {
            <li>
              <b>@feature</b>
            </li>
          }
        </ul>
      </div>
      <div class="col-12 mb-5 mt-5 wow fadeInUp" data-wow-delay="0.5s">
        <div class="card">
          <div class="card-body">
            <div class="section-title text-right mb-3 wow fadeInUp" data-wow-delay="0.8s">
              <h4>در مورد @Model.JobName</h4>
            </div>
            <article class="wow fadeInUp" data-wow-delay="0.5s">
              <p>
                @Model.JobSmallDescription
              </p>
              <p>
                @Html.Raw(Model.JobDescription)
              </p>
            </article>
          </div>
        </div>
      </div>

      <div class="col-12 addressInfo card col-md-6 wow fadeInRight" data-wow-delay="0.5s">
        <div class="card-body">
          <div class="section-title text-right mb-3 wow fadeInUp" data-wow-delay="0.8s">
            <h4>آدرس @Model.JobName</h4>
          </div>
          <p class="fadeInUp" data-wow-delay="0.5s">
            <i class="fas fa-map-marker"></i>@Model.JobAddress
          </p>
          <p class="fadeInUp" data-wow-delay="0.5s">
            <i class="fas fa-phone"></i>@Model.JobTel1 @Model.JobTel2</p>
          <p class="fadeInUp" data-wow-delay="0.5s">
            <i class="fas fa-phone"></i>@Model.JobMobile1 @Model.JobMobile2</p>
          <p class="fadeInUp" data-wow-delay="0.5s">
            <i class="fas fa-map">
              <a target="_blank" href="@Model.JobWazeLink">برو به Waze</a>
            </i>
          </p>
        </div>
      </div>
      <div class="col-12 col-md-6 wow fadeInLeft" data-wow-delay="0.5s">
        @Html.Raw(Model.JobWazeMap)
      </div>
    </div>
  </div>
</section>


<script>
  function initMap() {

    //--- Set Lat And Long
    var Place = { lat: 35.756905, lng: 51.414264 };
    // Styles a map in night mode.
    var map = new google.maps.Map(document.getElementById('map'),
      {
        center: Place,
        zoom: 17,
        disableDefaultUI: true,
        styles: [
          {
            featureType: "poi",
            elementType: "labels",
            stylers: [
              { visibility: "off" }
            ]
          },
          //{ elementType: 'geometry', stylers: [{ color: '#242f3e' }] },
          //{ elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },
          //{ elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },
          //{
          //    featureType: 'administrative.locality',
          //    elementType: 'labels.text.fill',
          //    stylers: [{ color: '#d59563' }]
          //},
          //{
          //    featureType: 'poi',
          //    elementType: 'labels.text.fill',
          //    stylers: [{ color: '#d59563' }]
          //},
          //{
          //    featureType: 'poi.park',
          //    elementType: 'geometry',
          //    stylers: [{ color: '#263c3f' }]
          //},
          //{
          //    featureType: 'poi.park',
          //    elementType: 'labels.text.fill',
          //    stylers: [{ color: '#6b9a76' }]
          //},
          //{
          //    featureType: 'road',
          //    elementType: 'geometry',
          //    stylers: [{ color: '#38414e' }]
          //},
          //{
          //    featureType: 'road',
          //    elementType: 'geometry.stroke',
          //    stylers: [{ color: '#212a37' }]
          //},
          //{
          //    featureType: 'road',
          //    elementType: 'labels.text.fill',
          //    stylers: [{ color: '#9ca5b3' }]
          //},
          //{
          //    featureType: 'road.highway',
          //    elementType: 'geometry',
          //    stylers: [{ color: '#746855' }]
          //},
          //{
          //    featureType: 'road.highway',
          //    elementType: 'geometry.stroke',
          //    stylers: [{ color: '#1f2835' }]
          //},
          //{
          //    featureType: 'road.highway',
          //    elementType: 'labels.text.fill',
          //    stylers: [{ color: '#f3d19c' }]
          //},
          //{
          //    featureType: 'transit',
          //    elementType: 'geometry',
          //    stylers: [{ color: '#2f3948' }]
          //},
          //{
          //    featureType: 'transit.station',
          //    elementType: 'labels.text.fill',
          //    stylers: [{ color: '#d59563' }]
          //},
          //{
          //    featureType: 'water',
          //    elementType: 'geometry',
          //    stylers: [{ color: '#17263c' }]
          //},
          //{
          //    featureType: 'water',
          //    elementType: 'labels.text.fill',
          //    stylers: [{ color: '#515c6d' }]
          //},
          //{
          //    featureType: 'water',
          //    elementType: 'labels.text.stroke',
          //    stylers: [{ color: '#17263c' }]
          //}
        ]
      });

    var marker = new google.maps.Marker({
      position: Place,
      map: map,
    });


  }


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA7cKhDofbpXgQD99WZgnqgL-KoVImz75c&callback=initMap"
        async defer></script>