@using Okapia.Domain.SeachModels
@model IEnumerable<Okapia.Domain.ViewModels.Comment.CommentViewModel>
@{
  var searchModel = ViewData["searchModel"] as CommentSearchModel;
}

<div class="row">
  <div class="col-md-12">
    <div class="panel panel-border panel-primary">
      <div class="panel-heading">
        <h2 class="panel-title">لیست کامنت ها</h2>
      </div>
      <div class="panel-body">
        <table id="datatable" class="table table-striped table-bordered">
          <thead>
          <tr>
          <th>
            ردیف
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CommentatorUsername)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CommentText)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CommentOwner)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CommentAgreeCount)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CommentDisagreeCount)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CommentConfirmDate)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CommentCreationDateDate)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CommentIsConfirmed)
          </th>
          <th>
            عملیات
          </th>

          </thead>
          <tbody>
          @foreach (var item in Model.Select((value, index) => new {index, value}))
          {
            <tr>
              <td>
                @{
                  var index = item.index;
                  index += 1;
                }
                @index
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.CommentatorUsername)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.CommentText)
              </td>
              <td>
                @if (item.value.CommentOwner == "Job")
                {
                  <span>مشاغل</span>
                }
                @if (item.value.CommentOwner == "Page")
                {
                  <span>صفحات</span>
                }
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.CommentAgreeCount)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.CommentDisagreeCount)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.CommentConfirmDate)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.CommentCreationDateDate)
              </td>
              @if (!item.value.CommentIsConfirmed)
              {
                <td class="text-danger">
                  تایید نشده
                </td>
              }
              @if (item.value.CommentIsConfirmed)
              {
                <td class="text-success">
                  تایید شده
                </td>
              }
                <td>
                  @if (!item.value.CommentIsConfirmed)
                  {
                    <a class="btn btn-sm btn-success" onclick="createEntityWithBodyThenFeedList('@Url.Action("Confirm", "Comment")/@item.value.CommentId', '', '@Url.Action("ListContent", "Comment")', 'listCommentsDiv')">تایید</a>
                  }
                  @if (!item.value.CommentIsDeleted)
                  {
                    <a class="btn btn-sm btn-danger" onclick="createEntityWithBodyThenFeedList('@Url.Action("Delete", "Comment")/@item.value.CommentId', '', '@Url.Action("ListContent", "Comment")', 'listCommentsDiv')">حذف</a>
                  }
                  @if (item.value.CommentIsDeleted)
                  {
                    <a class="btn btn-sm btn-success" onclick="createEntityWithBodyThenFeedList('@Url.Action("Activate", "Comment")/@item.value.CommentId', '', '@Url.Action("ListContent", "Comment")', 'listCommentsDiv')">فعال سازی</a>
                  }
                </td>
            </tr>
          }
          </tbody>
        </table>
        <div class="row">
          <div class="col-md-12">
            تعداد کل رکوردها: @searchModel.RecordCount
          </div>
        </div>
      </div>
      <nav>
        <ul class="pagination">
          @for (var i = 0; i < searchModel.PageCount; i++)
          {
            var routingSearchModel = new CommentSearchModel
            {
              CommentIsConfirmed = searchModel.CommentIsConfirmed,
              CommentOwner = searchModel.CommentOwner,
              CommentIsDeleted = searchModel.CommentIsDeleted,
              PageSize = 40,
              PageIndex = i
            };
            if (searchModel.PageIndex == i)
            {
              <li class="active">
                @Html.ActionLink((i + 1).ToString(), "Index", "Comment", routingSearchModel)
              </li>
            }
            else
            {
              <li>
                @Html.ActionLink((i + 1).ToString(), "Index", "Comment", routingSearchModel)
              </li>
            }
          }
        </ul>
      </nav>
    </div>
  </div>
</div>

@*<script>

  function changeStatus(statusCommand) {
    createEntityWithBodyThenFeedList('@Url.Action("ChangeStatus", "Comment")',
      statusCommand,
      '@Url.Action("ListContent", "Comment")',
      'listRequestsDiv');
  }

</script>*@