@using Okapia.Domain.SeachModels
@using Okapia.Domain.ViewModels.Job
@model IEnumerable<Okapia.Domain.ViewModels.Job.JobViewModel>
@{
  var searchModel = ViewData["searchModel"] as JobSearchModel;
}

<div class="row">
  <div class="col-md-12">
    <div class="panel panel-border panel-primary">
      <div class="panel-heading">
        <h2 class="panel-title">لیست مشاغل</h2>
      </div>
      <div class="panel-body">
        <table id="datatable" class="table table-striped table-bordered">
          <tbody>
          @foreach (var item in Model.Select((value, index) => new {index, value}))
          {
            <tr>
              <td>
                @{
                  var index = item.index;
                  index += 1;
                }
                @index
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobName)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobContactTitile)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobManagerFirstName)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobManagerLastName)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobTel)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobMobile)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobProvience)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobCity)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobDistrict)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobNeighborhood)
              </td>
              <td>
                @Html.ActionLink("اطلاح", "Edit", new {/* id=item.PrimaryKey */}) |
                @Html.ActionLink("جزيیات", "Details", new {/* id=item.PrimaryKey */}) |
                @Html.ActionLink("حذف", "Delete", new {/* id=item.PrimaryKey */})
              </td>
            </tr>
          }
          </tbody>
          <thead>
          <tr>
          <th>
            ردیف
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobContactTitile)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobManagerFirstName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobManagerLastName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobTel)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobMobile)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobProvience)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobCity)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobDistrict)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobNeighborhood)
          </th>
          <th>
            عملیات
          </th>

          </thead>
        </table>
      </div>
      <nav>
        <ul class="pagination">
          <li>
            <a href="#" aria-label="Previous">
              <span aria-hidden="true">&raquo;</span>
            </a>
          </li>
          @for (var i = 0; i < searchModel.PageCount; i++)
          {
            var routingSearchModel = new JobSearchModel
            {
              JobName = searchModel.JobName,
              JobContactTitile = searchModel.JobContactTitile,
              JobManagerFirstName = searchModel.JobManagerFirstName,
              JobManagerLastName = searchModel.JobManagerLastName,
              JobTel = searchModel.JobTel,
              JobMobile = searchModel.JobMobile,
              JobProvienceId = searchModel.JobProvienceId,
              JobCityId = searchModel.JobCityId,
              JobDistrictId = searchModel.JobDistrictId,
              JobNeighborhoodId = searchModel.JobNeighborhoodId,
              PageSize = 1,
              PageIndex = i
            };
            if (searchModel.PageIndex == i)
            {
              <li class="active">
                @Html.ActionLink((i + 1).ToString(), "Search", "Job", routingSearchModel)
              </li>
            }
            else
            {
              <li>
                @Html.ActionLink((i + 1).ToString(), "Search", "Job", routingSearchModel)
              </li>
            }
          }

          <li>
            <a href="#" aria-label="Next">
              <span aria-hidden="true">&laquo;</span>
            </a>
          </li>
        </ul>
      </nav>
    </div>
  </div>
</div>