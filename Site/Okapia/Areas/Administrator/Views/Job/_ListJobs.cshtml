@using Microsoft.AspNetCore.Http.Extensions
@using Okapia.Domain.SeachModels
@model IEnumerable<Okapia.Domain.ViewModels.Job.JobViewModel>
@{
  var searchModel = ViewData["searchModel"] as JobSearchModel;
}

<div class="row">
  <div class="col-md-12">
    <div class="panel panel-border panel-primary">
      <div class="panel-heading">
        <h2 class="panel-title">لیست مشاغل</h2>
      </div>
      <div class="panel-body">
        <table id="datatable" class="table table-striped table-bordered">
          <thead>
          <tr>
          <th>
            ردیف
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobPicture)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobContactTitile)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobManagerFirstName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobManagerLastName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobCategory)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobProvience)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobCity)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobDistrict)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.JobNeighborhood)
          </th>
          <th>
            عملیات
          </th>

          </thead>
          <tbody>

          @foreach (var item in Model.Select((value, index) => new {index, value}))
          {
            <tr>
              <td>
                @{
                  var index = item.index;
                  index += 1;
                }
                @index
              </td>
              <td>
                <img src="~/JobPhotos/Thumbs/@item.value.JobPicture" with="100" height="100"/>
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobName)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobContactTitile)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobManagerFirstName)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobManagerLastName)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobCategory)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobProvience)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobCity)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobDistrict)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.JobNeighborhood)
              </td>
              <td>
                <a id="editJob-@item.value.JobId" class="btn btn-sm btn-info" asp-area="Administrator" asp-controller="Job" asp-action="Edit" asp-route-id="@item.value.JobId" asp-route-redirectUrl="@Context.Request.GetDisplayUrl()">ویرایش</a>
                <a id="changePwd-@item.value.JobId" class="btn btn-sm btn-inverse" onclick="openChangePasswordModal('@item.value.AccountId')">تغییر رمز</a>
                @if (!item.value.IsDeleted)
                {
                  <a id="deleteJob-@item.value.JobId" class="btn btn-sm btn-danger" onclick="showDeleteForm('@item.value.JobId', 'editJob-@item.value.JobId', 'deleteJob-@item.value.JobId', 'changePwd-@item.value.JobId')">حذف</a>
                  <br />
                  <br />
                  <form id="deleteForm-@item.value.JobId" class="hidden" asp-route-id="@item.value.JobId" asp-area="Administrator" asp-controller="Job" asp-action="Delete" method="post">
                    <input type="text" id="301Redirect" name="301Redirect" class="form-control" placeholder="صفحه جایگزین 301 redirect" />
                    <button type="button" class="btn btn-sm btn-danger" onclick="createEntityThenReferesh('@Url.Action("Delete", "Job")/@item.value.JobId', 'deleteForm-@item.value.JobId')">حذف</button>
                    <button type="button" class="btn btn-sm btn-warning" onclick="hideDeleteForm('@item.value.JobId', 'editJob-@item.value.JobId', 'deleteJob-@item.value.JobId', 'changePwd-@item.value.JobId')">انصراف</button>
                  </form>
                }
                else
                {
                  <a class="btn btn-sm btn-success" asp-area="Administrator" asp-controller="Job" asp-action="Activate" asp-route-id="@item.value.JobId">فعال سازی</a>
                }
              </td>
            </tr>
          }
          </tbody>

        </table>

        <div class="row">
          تعداد کل رکوردها: @searchModel.RecordCount
        </div>

        <nav>
          <ul class="pagination">
            @for (var i = 0; i < searchModel.PageCount; i++)
            {
              var routingSearchModel = new JobSearchModel
              {
                JobName = searchModel.JobName,
                JobContactTitile = searchModel.JobContactTitile,
                JobManagerFirstName = searchModel.JobManagerFirstName,
                JobManagerLastName = searchModel.JobManagerLastName,
                JobTel = searchModel.JobTel,
                JobMobile = searchModel.JobMobile,
                JobProvienceId = searchModel.JobProvienceId,
                JobCityId = searchModel.JobCityId,
                JobDistrictId = searchModel.JobDistrictId,
                JobNeighborhoodId = searchModel.JobNeighborhoodId,
                JobCategoryId = searchModel.JobCategoryId,
                IsDeleted = searchModel.IsDeleted,
                PageSize = 40,
                PageIndex = i,
                RecordCount = searchModel.RecordCount
              };

              if (searchModel.PageIndex == i)
              {
                <li class="active">
                  @Html.ActionLink((i + 1).ToString(), "Index", "Job", routingSearchModel)
                </li>
              }
              else
              {
                <li>
                  @Html.ActionLink((i + 1).ToString(), "Index", "Job", routingSearchModel)
                </li>
              }
            }
          </ul>
        </nav>
      </div>
    </div>
    <!-- Modal -->
  </div>
</div>

<div id="changePasswordDiv">

</div>

<script>

  function openChangePasswordModal(id) {
    openModalWithData(`@Url.Action("ChnagePassword", "Account", new { area = "" })/${id}`, 'changePasswordDiv', 'changePasswordModal');
  }

  function showDeleteForm(id, edit, delet, changePwd) {
    $('#deleteForm-' + id).removeClass('hidden');
    $('#' + edit).addClass('hidden');
    $('#' + delet).addClass('hidden');
    $('#' + changePwd).addClass('hidden');
  }

  function hideDeleteForm(id, edit, delet, changePwd) {
    $('#deleteForm-' + id).addClass('hidden');
    $('#' + edit).removeClass('hidden');
    $('#' + delet).removeClass('hidden');
    $('#' + changePwd).removeClass('hidden');
  }
</script>