@using Okapia.Application.Utilities
@using Okapia.Domain.SeachModels
@model IEnumerable<Okapia.Domain.ViewModels.JobRequest.JobRequestViewModel>
@{
  var searchModel = ViewData["searchModel"] as JobRequestSearchModel;
}

<div class="row">
  <div class="col-md-12">
    <div class="panel panel-border panel-primary">
      <div class="panel-heading">
        <h2 class="panel-title">لیست درخواست ها</h2>
      </div>
      <div class="panel-body">
        <table id="datatable" class="table table-striped table-bordered">
          <thead>
          <tr>
          <th>
            ردیف
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Name)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.ContactTitle)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Mobile)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Tel)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Province)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.City)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CreationDate)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.TrackingNumber)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Status)
          </th>
          <th>
            عملیات
          </th>

          </thead>
          <tbody>
          @foreach (var item in Model.Select((value, index) => new {index, value}))
          {
            <tr>
              <td>
                @{
                  var index = item.index;
                  index += 1;
                }
                @index
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.Name)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.ContactTitle)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.Mobile)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.Tel)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.Province)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.City)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.CreationDate)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.TrackingNumber)
              </td>
              @if (item.value.Status == 1)
              {
                <td class="text-primary">
                  درخواست جدید
                </td>
                <td>
                  @*<a href="@Url.Action("ChangeStatus", "JobRequest", new ChangeStatus {Id = item.value.Id, Status = Statuses.Tracking})" class="btn btn-sm btn-purple">درحال پیگیری</a>*@
                  <a class="btn btn-sm btn-warning" onclick="changeStatus({ Id: '@item.value.Id', Status: '@Constants.Statuses.Tracking.Id' })">درحال پیگیری</a>
                  <a class="btn btn-sm btn-danger" onclick="changeStatus({ Id: '@item.value.Id', Status: '@Constants.Statuses.Denied.Id' })">رد درخواست</a>
                  <a class="btn btn-sm btn-info" onclick="openJobRequestDetailsModal('@item.value.Id')">جزییات</a>
                </td>
              }
              @if (item.value.Status == 2)
              {
                <td class="text-primary">
                  درحال پیگیری
                </td>
                <td>
                  <a class="btn btn-sm btn-success" asp-action="RegisterJobRequestToJob" asp-route-id="@item.value.Id">ثبت در مشاغل</a>
                  <a class="btn btn-sm btn-danger" onclick="changeStatus({ Id: '@item.value.Id', Status: '@Constants.Statuses.Denied.Id' })">رد درخواست</a>
                  <a class="btn btn-sm btn-info" onclick="openJobRequestDetailsModal('@item.value.Id')">جزییات</a>
                </td>
              }
              @if (item.value.Status == 3)
              {
                <td class="text-primary">
                  ثبت شده در مشاغل
                </td>
                <td>
                  <a class="btn btn-sm btn-info" onclick="openJobRequestDetailsModal('@item.value.Id')">جزییات</a>
                </td>
              }
              @if (item.value.Status == 4)
              {
                <td class="text-danger">
                  درخواست رد شده
                </td>
                <td>
                  <a class="btn btn-sm btn-purple" onclick="changeStatus({ Id: '@item.value.Id', Status: '@Constants.Statuses.Requested.Id' })">فعال سازی مجدد</a>
                  <a class="btn btn-sm btn-info" onclick="openJobRequestDetailsModal('@item.value.Id')">جزییات</a>
                </td>
              }
            </tr>
          }
          </tbody>
        </table>
      </div>
      <nav>
        <ul class="pagination">
          @for (var i = 0; i < searchModel.PageCount; i++)
          {
            var routingSearchModel = new JobRequestSearchModel
            {
              Name = searchModel.Name,
              ContactTitle = searchModel.ContactTitle,
              CityId = searchModel.CityId,
              ProvinceId = searchModel.ProvinceId,
              TrackingNumber = searchModel.TrackingNumber,
              SelectedStatus = searchModel.SelectedStatus,
              PageSize = 40,
              PageIndex = i
            };
            if (searchModel.PageIndex == i)
            {
              <li class="active">
                @Html.ActionLink((i + 1).ToString(), "Index", "JobRequest", routingSearchModel)
              </li>
            }
            else
            {
              <li>
                @Html.ActionLink((i + 1).ToString(), "Index", "JobRequest", routingSearchModel)
              </li>
            }
          }
        </ul>
      </nav>
    </div>
  </div>
</div>

<script>

  function changeStatus(statusCommand) {
    createEntityWithBodyThenFeedList('@Url.Action("ChangeStatus", "JobRequest")',
      statusCommand,
      '@Url.Action("ListContent", "JobRequest")',
      'listRequestsDiv');
  }

  function openJobRequestDetailsModal(id) {
    openModalWithData(`@Url.Action("Details", "JobRequest")/${id}`, 'jobRequestDetails', 'jobRequestDetailsModal');
  }

</script>