@using Microsoft.AspNetCore.Http.Extensions
@using Okapia.Domain.SeachModels
@model IEnumerable<Okapia.Domain.ViewModels.Category.CategoryViewModel>
@{
  var searchModel = ViewData["searchModel"] as CategorySearchModel;
}

<div class="row">
  <div class="col-md-12">
    <div class="panel panel-border panel-primary">
      <div class="panel-heading">
        <h2 class="panel-title">لیست گروه های مشاغل</h2>
      </div>
      <div class="panel-body">
        <table id="datatable" class="table table-striped table-bordered">
          <thead>
          <tr>
          <th>
            ردیف
          </th>
          <th>
            @Html.DisplayNameFor(model => model.Photo)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CategoryName)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CategorySmallDescription)
          </th>
          <th>
            @Html.DisplayNameFor(model => model.CategoryColor)
          </th>
          <th>
            عملیات
          </th>

          </thead>
          <tbody>
          @foreach (var item in Model.Select((value, index) => new {index, value}))
          {
            <tr>
              <td>
                @{
                  var index = item.index;
                  index += 1;
                }
                @index
              </td>
              <td>
                @if (!string.IsNullOrEmpty(item.value.Photo))
                {
                  <img src="~/CategoryPhotos/Thumbs/@item.value.Photo" with="100" height="100"/>
                }
                else
                {
                  <img src="~/defaultimage.png" with="100" height="100"/>
                }
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.CategoryName)
              </td>
              <td>
                @Html.DisplayFor(modelItem => item.value.CategorySmallDescription)
              </td>

              <td>
                @Html.DisplayFor(modelItem => item.value.CategoryColor)
                <a style="padding: 5px; background-color: @item.value.CategoryColor"></a>
              </td>
              <td>
                <a class="btn btn-sm btn-info" asp-area="Administrator" asp-controller="Category" asp-action="Edit" asp-route-id="@item.value.CategoryId" asp-route-redirectUrl="@Context.Request.GetDisplayUrl()">ویرایش</a>
                @if (!item.value.IsDeleted)
                {
                  <a class="btn btn-sm btn-danger" asp-area="Administrator" asp-controller="Category" asp-action="Delete" asp-route-id="@item.value.CategoryId">حذف</a>
                }
                else
                {
                  <a class="btn btn-sm btn-success" asp-area="Administrator" asp-controller="Category" asp-action="Activate" asp-route-id="@item.value.CategoryId">فعال سازی</a>
                }
              </td>
            </tr>
          }
          </tbody>
        </table>
        <div class="row">
          <div class="col-md-12">
            تعداد کل رکوردها: @searchModel.RecordCount
          </div>
        </div>

      </div>
      <nav>
        <ul class="pagination">
          @for (var i = 0; i < searchModel.PageCount; i++)
          {
            var routingSearchModel = new CategorySearchModel
            {
              CategoryName = searchModel.CategoryName,
              CategoryParrentId = searchModel.CategoryParrentId,
              PageSize = 20,
              PageIndex = i
            };
            if (searchModel.PageIndex == i)
            {
              <li class="active">
                @Html.ActionLink((i + 1).ToString(), "Index", "Category", routingSearchModel)
              </li>
            }
            else
            {
              <li>
                @Html.ActionLink((i + 1).ToString(), "Index", "Category", routingSearchModel)
              </li>
            }
          }
        </ul>
      </nav>
    </div>
  </div>
</div>